package csfmarks;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

/**
 *
 * @author Rhys Hood
 */
public class CSFMarks {
    
    static int totalMarks = 0;
    static ArrayList<String> allMarks = new ArrayList<>();
    static ArrayList<String> s1Marks = new ArrayList<>();
    static ArrayList<String> s2Marks = new ArrayList<>();
    static ArrayList<String> s3Marks = new ArrayList<>();
    static boolean marksEntered = false;
    
    static void EnterMarks(){
        String input = " ";
        
        System.out.println("Please enter student marks. Enter # when you are finished");
        while(!"#".equals(input.intern())){
            Scanner scan1 = new Scanner(System.in); //Waits for input
            input = scan1.nextLine();
            
            if (!"#".equals(input)){
                totalMarks++;
                allMarks.add(input);
                s1Marks.add(Character.toString(input.charAt(0)));
                s2Marks.add(Character.toString(input.charAt(1)));
                s3Marks.add(Character.toString(input.charAt(2)));
            }
            else{
               marksEntered = true;
               System.out.println("Completed entering Marks");
               System.out.println("Do you want to save the marks entered <y or n>");
               scan1 = new Scanner(System.in);
               String input2 = scan1.nextLine();
               while(!"y".equals(input2) && !"n".equals(input2)){
                   System.out.println("ERROR: Please only enter y or n!");
                   System.out.println("Do you want to save the marks entered <y or n>");
                   scan1 = new Scanner(System.in);
                   input = scan1.nextLine();
               }
               if ("y".equals(input2)){
                   CreateFile();
               }
            }
        }
    }
    
    static void CreateFile(){
      if (marksEntered){
      SimpleDateFormat formatter = new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss");
      Date date = new Date();
      try {
        File myObj = new File(formatter.format(date) + ".txt");
        if (myObj.createNewFile()) {
         System.out.println("File created: " + myObj.getName());
        } else {
         System.out.println("File already exists.");
        }
        WriteFile(myObj);
       } catch (IOException e) {
        System.out.println("An error occurred.");
        }
      }
      else{
          System.out.println("ERROR: There are no marks in memory.");
      }
    }
    
    static void WriteFile(File myObj){
        try {
            try (FileWriter myWriter = new FileWriter(myObj.getName())) {
                for (int i = 0; i < totalMarks; i++) {
                    myWriter.write(allMarks.get(i)+ "\n");
                }
                System.out.println(totalMarks + " student marks in memory");
                System.out.println(totalMarks + " lines saved to file");
            }
        } catch (IOException e) {
         System.out.println("An error occurred.");
        }
    }
    
    static void ShowSections(){
        System.out.println("Section 1:");
        SectionBreakdown(1);
        System.out.println("Section 2:");
        SectionBreakdown(2);
        System.out.println("Section 3:");
        SectionBreakdown(3);
    }
    
    static void SectionBreakdown(int num){
        int q0 = 0;
        int q1 = 0;
        int q2 = 0;
        int q3 = 0;
        int q4 = 0;
        int q5 = 0;
        
        if (num == 1){
            for (int i = 0; i < totalMarks; i++) {
                switch (s1Marks.get(i)) {
                    case "0":
                        q0 = q0 + 1;
                        break;
                    case "1":
                        q1 = q1 + 1;
                        break;
                    case "2":
                        q2 = q2 + 1;
                        break;
                    case "3":
                        q3 = q3 + 1;
                        break;
                    case "4":
                        q4 = q4 + 1;
                        break;
                    case "5":
                        q5 = q5 + 1;
                        break;
                }
            }
        }
        else if (num == 2){
            for (int i = 0; i < totalMarks; i++) {
                switch (s2Marks.get(i)) {
                    case "0":
                        q0 = q0 + 1;
                        break;
                    case "1":
                        q1 = q1 + 1;
                        break;
                    case "2":
                        q2 = q2 + 1;
                        break;
                    case "3":
                        q3 = q3 + 1;
                        break;
                    case "4":
                        q4 = q4 + 1;
                        break;
                    case "5":
                        q5 = q5 + 1;
                        break;
                }
            }
        }
        else{
            for (int i = 0; i < totalMarks; i++) {
                switch (s3Marks.get(i)) {
                    case "0":
                        q0 = q0 + 1;
                        break;
                    case "1":
                        q1 = q1 + 1;
                        break;
                    case "2":
                        q2 = q2 + 1;
                        break;
                    case "3":
                        q3 = q3 + 1;
                        break;
                    case "4":
                        q4 = q4 + 1;
                        break;
                    case "5":
                        q5 = q5 + 1;
                        break;
                }
            }
        }
        q0 = GetPercentage(q0, totalMarks);
        q1 = GetPercentage(q1, totalMarks);
        q2 = GetPercentage(q2, totalMarks);
        q3 = GetPercentage(q3, totalMarks);
        q4 = GetPercentage(q4, totalMarks);
        q5 = GetPercentage(q5, totalMarks);
        
        DisplaySections(q0,q1,q2,q3,q4,q5);
    }
    
    static int GetPercentage(float top, float bottom){
       float percent =  top / bottom;
       percent = percent*100;
       percent = Math.round(percent);
        
        return (int) percent;
    }
    
    static void DisplaySections(int q0, int q1, int q2, int q3,int q4, int q5){
        System.out.println("Number correct 0: " + String.valueOf(q0) + "%");
        System.out.println("Number correct 1: " + String.valueOf(q1) + "%");
        System.out.println("Number correct 2: " + String.valueOf(q2) + "%");
        System.out.println("Number correct 3: " + String.valueOf(q3) + "%");
        System.out.println("Number correct 4: " + String.valueOf(q4) + "%");
        System.out.println("Number correct 5: " + String.valueOf(q5) + "%");
    }
    
    
    
    static void ClassBreakdown(){
        Fullmarks();
        BPassmarks();
        Passmarks();
        Failedone();
        Failedtwo();
        Failedthree();
    }
    
    static void Fullmarks(){
        int fm = 0;
        for (int i = 0; i < totalMarks; i++) {
                switch (allMarks.get(i)) {
                    case "555":
                        fm = fm + 1;
                        break;
                }
            }
        fm = GetPercentage(fm, totalMarks);
        System.out.println("Fullmarks 555: " + fm + "%");
    }
    
    static void BPassmarks(){
        int bp = 0;
        for (int i = 0; i <= totalMarks-1; i++) {
                switch (allMarks.get(i)) {
                    case "333":
                        bp = bp + 1;
                        break;
                }
            }
        bp = GetPercentage(bp, totalMarks);
        System.out.println("Borderline Pass 333: " + bp + "%");
    }
    
    static void Passmarks(){
        int fpp = 0;
        for (int i = 0; i <= totalMarks-1; i++) {
                if(Integer.parseInt(allMarks.get(i)) >= 333 && Integer.parseInt(allMarks.get(i)) <= 555){
                    fpp = fpp + 1;
                }
            }
        fpp = GetPercentage(fpp, totalMarks);
        System.out.println("Full Paper Pass all sections >= 333: " + fpp + "%");
    }
    
    static void Failedone (){
        int failed = 0;
        for (int i = 0; i <= totalMarks-1; i++) {
                if(Integer.parseInt(s1Marks.get(i)) < 3){
                    failed = failed + 1;
                }
            }
        failed = GetPercentage(failed, totalMarks);
        System.out.println("Failed Section 1 less than 3: " + failed + "%");
    }
    
    static void Failedtwo (){
        int failed = 0;
        for (int i = 0; i <= totalMarks-1; i++) {
                if(Integer.parseInt(s2Marks.get(i)) < 3){
                    failed = failed + 1;
                }
            }
        failed = GetPercentage(failed, totalMarks);
        System.out.println("Failed Section 2 less than 3: " + failed + "%");
    }
    
    static void Failedthree (){
        int failed = 0;
        for (int i = 0; i <= totalMarks-1; i++) {
                if(Integer.parseInt(s3Marks.get(i)) < 3){
                    failed = failed + 1;
                }
            }
        failed = GetPercentage(failed, totalMarks);
        System.out.println("Failed Section 3 less than 3: " + failed + "%");
    }
    
    static void ReadFile(){
       System.out.println("Please enter the file name:");
       Scanner scan1 = new Scanner(System.in);
       String input = scan1.nextLine();
       try {
        File myObj = new File(input + ".txt");
           try (Scanner myReader = new Scanner(myObj)) {
               while (myReader.hasNextLine()) {
                   String data = myReader.nextLine();
                   totalMarks++;
                   allMarks.add(data);
                   s1Marks.add(Character.toString(data.charAt(0)));
                   s2Marks.add(Character.toString(data.charAt(1)));
                   s3Marks.add(Character.toString(data.charAt(2)));
               }
               marksEntered = true;
               System.out.println(totalMarks + " student marks imported to memory");
               System.out.println(input + ".txt opened");
           }
       } catch (FileNotFoundException e) {
         System.out.println("ERROR: File not found");
       }
    }

    static int MenuOptions(){ // Defines the Menu method
        System.out.println("Please select an option (1/2/3/4/5/6)"); // Asks user to input option
        System.out.println("1. Enter Marks"); // Lists Option 1
        System.out.println("2. Show Sections Statistics"); // Lists Option 2
        System.out.println("3. Show Class Breakdown"); // Lists Option 3
        System.out.println("4. Load Marks"); // Lists Option 4
        System.out.println("5. Save Marks"); // Lists Option 5
        System.out.println("6. Quit"); // Lists Option 6
        Scanner scan1 = new Scanner(System.in); //Waits for input
        return Integer.parseInt(scan1.nextLine());// Sets option to input
    }
    
    static void Menu(){
       int option = 0; // Initialises the option variable
       while (option !=6){ // Loops menu until user choses to quit
        option = MenuOptions(); // Calls on the Menu method. (Message isn't included as it changes when there is an error)
        while (option != 1 && option != 2 && option != 3 && option != 4 && option != 5 && option != 6){ // Starts Input Validation
            System.out.println("ERROR: Please only enter 1, 2, 3 or 4"); // Asks user to input 1,2,3 or 4
            option = MenuOptions(); // Calls on the Menu method. (Message isn't included as it changes when there is an error)
        }        
        if (option == 1){
            EnterMarks();
        }
        else if (option == 2){
            ShowSections();
        }
        else if (option == 3){
            ClassBreakdown();
        }
        else if (option == 4){
            ReadFile();
        }
        else if (option == 5){
            CreateFile();
        }
        else{
            System.out.println("You have chosen to quit. Goodbye!"); // Quits program if option 3 is chosen
        }
       }
    }
    
    public static void main(String[] args) {
       Menu();
    }
}
